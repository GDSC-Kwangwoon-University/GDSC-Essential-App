name: CI

on:
  pull_request:
    branches: ["main"]

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4
        with:
          path: code

      - name: 🐦 Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v3
        with:
          pubspec-file-path: code/pubspec.yaml

      - name: 🐦 Cache Flutter
        id: flutter-cache
        uses: actions/cache@v4.0.2
        with:
          path: flutter
          key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
          restore-keys: |
            ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-
            ${{ env.cache-name }}-ubuntu-latest-
            ${{ env.cache-name }}-
        env:
          cache-name: flutter-cache

      - name: 🐦 Clone the Flutter repository
        if: steps.flutter-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: flutter/flutter
          ref: ${{ steps.get-flutter-version.outputs.version }}
          path: flutter

      - name: 🐦 Add the flutter tool to the path
        run: |
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      # - name: 🐦 Populate the Flutter tool's cache of binary artifacts
      #   if: steps.flutter-cache.outputs.cache-hit != 'true'
      #   run: |
      #     flutter config --no-analytics
      #     flutter precache

      - name: 📦 Install dependencies
        working-directory: code
        run: flutter pub get

      # - name: 🔍 Analyze project source
      #   working-directory: code
      #   run: flutter analyze lib test

      - name: 🧪 Run tests
        working-directory: code
        run: flutter test
